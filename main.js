(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,":root {\n    --header-height: 100px;\n    --board-size: 318px;\n    --cell-size: 30px;\n    --background-color: rgb(240, 240, 240);\n    --bg-color: rgb(216, 234, 241);\n    --background-color-transparent: rgba(240, 240, 240, 0.7);\n    --cell-color: rgb(230, 230, 230);\n    --cell-hover-color: rgb(200, 200, 200);\n    --cell-border-color: rgb(70, 70, 70);\n    --ship-color: rgb(150, 150, 150);\n    --hit-color: rgb(206, 169, 134);\n    --miss-color: rgb(161, 216, 161);\n    --sunk-color: rgb(206, 134, 134);\n    --text-color-main: rgb(40, 40, 40);\n    --text-color-grey: rgb(100, 100, 100);\n    --button-color: rgb(210, 210, 210);\n    --button-color-hover: rgb(230, 230, 230);\n    --button-color-active: grey;\n}\n\n:root.dark {\n    --background-color: rgb(30, 30, 30);\n    --background-color-transparent: rgba(30, 30, 30, 0.7);\n    --bg-color: rgb(37, 53, 59);\n    --cell-color: rgb(40, 40, 40);\n    --cell-hover-color: rgb(90, 90, 90);\n    --cell-border-color: rgb(220, 220, 220);\n    --ship-color: rgb(153, 153, 153);\n    --hit-color: rgb(155, 99, 61);\n    --miss-color: rgb(52, 109, 52);\n    --sunk-color: rgb(155, 61, 61);\n    --text-color-main: rgb(220, 220, 220);\n    --text-color-grey: rgb(160, 160, 160);\n    --button-color: rgb(50, 50, 50);\n    --button-color-hover: rgb(20, 20, 20);\n    --button-color-active: grey;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Lobster', cursive;\n    background-color: var(--background-color);\n    color: var(--text-color-main);\n}\n\n#app {\n    background-color: var(--bg-color);\n    padding: 0 5%;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 676px;\n}\n\n.btn-container {\n    display: flex;\n    gap: 5px;\n}\n\nheader button {\n    height: 32px;\n    width: 120px;\n    font-size: 1rem;\n    padding-bottom: 2px;\n}\n\nbutton {\n    color: var(--text-color-main);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid var(--text-color-main);\n    border: none;\n    margin-left: 5px;\n    border-radius: 0;\n    background-color: var(--button-color);\n}\n\nbutton:active {\n    background-color: var(--button-color-active);\n}\n\n@media (hover: hover) {\n    button:hover {\n        cursor: pointer;\n        border-width: 2px;\n        background-color: var(--button-color-hover);\n    }\n}\n\n#game-container {\n    display: flex;\n    justify-content: start;\n    align-content: center;\n    flex-wrap: wrap;\n    gap: 40px;\n    margin-block: 50px;\n    width: 676px;\n    transform: translateY(-100vw);\n    opacity: 0;\n    transition: 300ms ease-in-out;\n}\n\n#game-container.active {\n    transform: none;\n    opacity: 100%;\n}\n\n\n/* player setup */\n\n.setup-ships-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: var(--board-size);\n    height: calc(var(--board-size)+ 25px);\n    text-align: right;\n}\n\n.setup-ships-header p {\n    margin: 0;\n    font-size: .8rem;\n}\n\n.setup-ships-list {\n    display: flex;\n}\n\n.setup-ship-vertical {\n    flex-direction: column;\n}\n\n.setup-ship-hide div {\n    background-color: rgba(0, 0, 0, 0);\n    opacity: 0.5;\n}\n\n.setup-ship {\n    height: 40px;\n    position: relative;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.setup-ship p {\n    margin: 0;\n    display: inline-block;\n}\n\n.setup-ship-box {\n    cursor: grab;\n    display: inline-flex;\n    gap: 2px;\n    position: relative;\n    z-index: 20;\n}\n\n.setup-ship-cell {\n    width: var(--cell-size);\n    height: var(--cell-size);\n    background-color: var(--cell-hover-color);\n    border: 1px solid var(--cell-border-color);\n}\n\n.setup-ships-options {\n    display: flex;\n    justify-content: space-between;\n}\n\n.setup-ship-dropped {\n    position: absolute;\n    top: -1px;\n    left: -1px;\n}\n\n.setup-button-start,\n.setup-button-random {\n    width: 120px;\n    height: 36px;\n}\n\n.setup-button-start {\n    font-weight: 600;\n    font-size: 1rem;\n    background-color: var(--hit-color);\n    transition: transform 0.1s ease;\n}\n\n.setup-button-start-disabled {\n    opacity: 0.5;\n    pointer-events: none;\n}\n\n@media (hover: hover) {\n    .setup-button-start:hover {\n        transform: scale(1.1);\n        background-color: rgb(226, 116, 116);\n    }\n}\n\n.board-container {\n    display: inline-block;\n}\n\n\n/* Player Board */\n\n.board {\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    gap: 2px;\n}\n\n.cell {\n    position: relative;\n    cursor: crosshair;\n    background-color: var(--cell-color);\n    border: 1px solid var(--cell-border-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: var(--cell-size);\n    width: var(--cell-size);\n}\n\n.cell-drag-over {\n    pointer-events: none;\n    position: absolute;\n    display: inline-block;\n    z-index: 40;\n}\n\n.cell-drag-valid {\n    background-color: var(--miss-color);\n}\n\n.cell-drag-invalid {\n    background-color: var(--hit-color);\n}\n\n@media (hover: hover) {\n    .cell:not([data-player='1']):not(.cell-hit):not(.cell-miss):hover {\n        background-color: var(--cell-hover-color);\n    }\n}\n\n.cell-ship {\n    background-color: var(--ship-color);\n}\n\n.cell-hit {\n    background-color: var(--hit-color);\n}\n\n.cell-hit::after {\n    content: '✖';\n    opacity: 0.8;\n    font-size: 1.3rem;\n    padding-bottom: 1px;\n}\n\n.cell-miss {\n    background-color: var(--miss-color);\n}\n\n.cell-miss::after {\n    content: '●';\n    opacity: 0.6;\n    padding-bottom: 4px;\n}\n\n.cell-sunk {\n    background-color: var(--sunk-color);\n    transition: background-color 0.2s ease;\n}\n\n\n/* Victory container */\n\n.victory-container {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 318px;\n    text-align: center;\n    font-family: 'Oswald', sans-serif;\n    padding: 20px;\n    border: 3px solid var(--text-color-main);\n    background-color: var(--background-color-transparent);\n    backdrop-filter: blur(4px);\n}\n\n.victory-container h2 {\n    margin: 0;\n    text-shadow: 0 0 2px black, 0 0 4px black, 0 0 6px black;\n}\n\n.victory-container p {\n    margin: 6px;\n}\n\n.victory-victory {\n    color: var(--miss-color);\n}\n\n.victory-defeat {\n    color: var(--sunk-color);\n}\n\n.hide {\n    display: block;\n}\n\n.how-to-play {\n    display: none;\n    transform: translateY(100vh);\n    width: 100%;\n    height: 65vh;\n    transition: 300ms ease-in-out;\n    opacity: 0;\n    flex-direction: column;\n    width: 100vw;\n    margin-block: 50px;\n    background-color: var(--bg-color);\n    align-items: center;\n    z-index: 9;\n    padding-bottom: 5rem;\n}\n\n.how-to-play.active {\n    transform: none;\n    opacity: 100%;\n}\n\n.how-to-playboard-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-block: 20px;\n    padding-inline: 50px;\n    width: 60%;\n}\n\n.how-to-play-div-container {\n    display: flex;\n    gap: 20px;\n}\n\n.how-to-play-div-container>div {\n    padding: 20px;\n    margin-top: 30px;\n    background-color: var(--background-color);\n    flex: 1;\n    border-radius: 15px;\n    box-shadow: 0 10px 15px rgb(100, 100, 100);\n}\n\n.how-to-play-div2-header {\n    margin-bottom: 15px;\n}\n\n.how-to-playboard-header {\n    margin: auto;\n}\n\n.how-to-play-div1-text {\n    margin-top: 10px;\n    font-weight: 300;\n}\n\n\n/* Footer */\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    gap: 16px;\n    padding: 0 32px;\n}\n\n#footer-link {\n    text-decoration: none;\n}\n\nfooter p {\n    font-weight: 600;\n    font-size: 1.1rem;\n}\n\nfooter i {\n    color: var(--text-color-main);\n    transition: transform 0.1s ease;\n}\n\n@media (hover: hover) {\n    #footer-link:hover,\n    #footer-dark-mode:hover {\n        cursor: pointer;\n        transform: scale(1.2);\n        transition: transform 0.1s ease;\n    }\n}\n\n@media screen and (max-width: 800px) {\n     :root {\n        --header-height: 80px;\n        --board-size: 278px;\n        --cell-size: 26px;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n    --header-height: 100px;\n    --board-size: 318px;\n    --cell-size: 30px;\n    --background-color: rgb(240, 240, 240);\n    --bg-color: rgb(216, 234, 241);\n    --background-color-transparent: rgba(240, 240, 240, 0.7);\n    --cell-color: rgb(230, 230, 230);\n    --cell-hover-color: rgb(200, 200, 200);\n    --cell-border-color: rgb(70, 70, 70);\n    --ship-color: rgb(150, 150, 150);\n    --hit-color: rgb(206, 169, 134);\n    --miss-color: rgb(161, 216, 161);\n    --sunk-color: rgb(206, 134, 134);\n    --text-color-main: rgb(40, 40, 40);\n    --text-color-grey: rgb(100, 100, 100);\n    --button-color: rgb(210, 210, 210);\n    --button-color-hover: rgb(230, 230, 230);\n    --button-color-active: grey;\n}\n\n:root.dark {\n    --background-color: rgb(30, 30, 30);\n    --background-color-transparent: rgba(30, 30, 30, 0.7);\n    --bg-color: rgb(37, 53, 59);\n    --cell-color: rgb(40, 40, 40);\n    --cell-hover-color: rgb(90, 90, 90);\n    --cell-border-color: rgb(220, 220, 220);\n    --ship-color: rgb(153, 153, 153);\n    --hit-color: rgb(155, 99, 61);\n    --miss-color: rgb(52, 109, 52);\n    --sunk-color: rgb(155, 61, 61);\n    --text-color-main: rgb(220, 220, 220);\n    --text-color-grey: rgb(160, 160, 160);\n    --button-color: rgb(50, 50, 50);\n    --button-color-hover: rgb(20, 20, 20);\n    --button-color-active: grey;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Lobster', cursive;\n    background-color: var(--background-color);\n    color: var(--text-color-main);\n}\n\n#app {\n    background-color: var(--bg-color);\n    padding: 0 5%;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 676px;\n}\n\n.btn-container {\n    display: flex;\n    gap: 5px;\n}\n\nheader button {\n    height: 32px;\n    width: 120px;\n    font-size: 1rem;\n    padding-bottom: 2px;\n}\n\nbutton {\n    color: var(--text-color-main);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid var(--text-color-main);\n    border: none;\n    margin-left: 5px;\n    border-radius: 0;\n    background-color: var(--button-color);\n}\n\nbutton:active {\n    background-color: var(--button-color-active);\n}\n\n@media (hover: hover) {\n    button:hover {\n        cursor: pointer;\n        border-width: 2px;\n        background-color: var(--button-color-hover);\n    }\n}\n\n#game-container {\n    display: flex;\n    justify-content: start;\n    align-content: center;\n    flex-wrap: wrap;\n    gap: 40px;\n    margin-block: 50px;\n    width: 676px;\n    transform: translateY(-100vw);\n    opacity: 0;\n    transition: 300ms ease-in-out;\n}\n\n#game-container.active {\n    transform: none;\n    opacity: 100%;\n}\n\n\n/* player setup */\n\n.setup-ships-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: var(--board-size);\n    height: calc(var(--board-size)+ 25px);\n    text-align: right;\n}\n\n.setup-ships-header p {\n    margin: 0;\n    font-size: .8rem;\n}\n\n.setup-ships-list {\n    display: flex;\n}\n\n.setup-ship-vertical {\n    flex-direction: column;\n}\n\n.setup-ship-hide div {\n    background-color: rgba(0, 0, 0, 0);\n    opacity: 0.5;\n}\n\n.setup-ship {\n    height: 40px;\n    position: relative;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.setup-ship p {\n    margin: 0;\n    display: inline-block;\n}\n\n.setup-ship-box {\n    cursor: grab;\n    display: inline-flex;\n    gap: 2px;\n    position: relative;\n    z-index: 20;\n}\n\n.setup-ship-cell {\n    width: var(--cell-size);\n    height: var(--cell-size);\n    background-color: var(--cell-hover-color);\n    border: 1px solid var(--cell-border-color);\n}\n\n.setup-ships-options {\n    display: flex;\n    justify-content: space-between;\n}\n\n.setup-ship-dropped {\n    position: absolute;\n    top: -1px;\n    left: -1px;\n}\n\n.setup-button-start,\n.setup-button-random {\n    width: 120px;\n    height: 36px;\n}\n\n.setup-button-start {\n    font-weight: 600;\n    font-size: 1rem;\n    background-color: var(--hit-color);\n    transition: transform 0.1s ease;\n}\n\n.setup-button-start-disabled {\n    opacity: 0.5;\n    pointer-events: none;\n}\n\n@media (hover: hover) {\n    .setup-button-start:hover {\n        transform: scale(1.1);\n        background-color: rgb(226, 116, 116);\n    }\n}\n\n.board-container {\n    display: inline-block;\n}\n\n\n/* Player Board */\n\n.board {\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    grid-template-columns: repeat(10, 1fr);\n    gap: 2px;\n}\n\n.cell {\n    position: relative;\n    cursor: crosshair;\n    background-color: var(--cell-color);\n    border: 1px solid var(--cell-border-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: var(--cell-size);\n    width: var(--cell-size);\n}\n\n.cell-drag-over {\n    pointer-events: none;\n    position: absolute;\n    display: inline-block;\n    z-index: 40;\n}\n\n.cell-drag-valid {\n    background-color: var(--miss-color);\n}\n\n.cell-drag-invalid {\n    background-color: var(--hit-color);\n}\n\n@media (hover: hover) {\n    .cell:not([data-player='1']):not(.cell-hit):not(.cell-miss):hover {\n        background-color: var(--cell-hover-color);\n    }\n}\n\n.cell-ship {\n    background-color: var(--ship-color);\n}\n\n.cell-hit {\n    background-color: var(--hit-color);\n}\n\n.cell-hit::after {\n    content: '✖';\n    opacity: 0.8;\n    font-size: 1.3rem;\n    padding-bottom: 1px;\n}\n\n.cell-miss {\n    background-color: var(--miss-color);\n}\n\n.cell-miss::after {\n    content: '●';\n    opacity: 0.6;\n    padding-bottom: 4px;\n}\n\n.cell-sunk {\n    background-color: var(--sunk-color);\n    transition: background-color 0.2s ease;\n}\n\n\n/* Victory container */\n\n.victory-container {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 318px;\n    text-align: center;\n    font-family: 'Oswald', sans-serif;\n    padding: 20px;\n    border: 3px solid var(--text-color-main);\n    background-color: var(--background-color-transparent);\n    backdrop-filter: blur(4px);\n}\n\n.victory-container h2 {\n    margin: 0;\n    text-shadow: 0 0 2px black, 0 0 4px black, 0 0 6px black;\n}\n\n.victory-container p {\n    margin: 6px;\n}\n\n.victory-victory {\n    color: var(--miss-color);\n}\n\n.victory-defeat {\n    color: var(--sunk-color);\n}\n\n.hide {\n    display: block;\n}\n\n.how-to-play {\n    display: none;\n    transform: translateY(100vh);\n    width: 100%;\n    height: 65vh;\n    transition: 300ms ease-in-out;\n    opacity: 0;\n    flex-direction: column;\n    width: 100vw;\n    margin-block: 50px;\n    background-color: var(--bg-color);\n    align-items: center;\n    z-index: 9;\n    padding-bottom: 5rem;\n}\n\n.how-to-play.active {\n    transform: none;\n    opacity: 100%;\n}\n\n.how-to-playboard-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding-block: 20px;\n    padding-inline: 50px;\n    width: 60%;\n}\n\n.how-to-play-div-container {\n    display: flex;\n    gap: 20px;\n}\n\n.how-to-play-div-container>div {\n    padding: 20px;\n    margin-top: 30px;\n    background-color: var(--background-color);\n    flex: 1;\n    border-radius: 15px;\n    box-shadow: 0 10px 15px rgb(100, 100, 100);\n}\n\n.how-to-play-div2-header {\n    margin-bottom: 15px;\n}\n\n.how-to-playboard-header {\n    margin: auto;\n}\n\n.how-to-play-div1-text {\n    margin-top: 10px;\n    font-weight: 300;\n}\n\n\n/* Footer */\n\nfooter {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    gap: 16px;\n    padding: 0 32px;\n}\n\n#footer-link {\n    text-decoration: none;\n}\n\nfooter p {\n    font-weight: 600;\n    font-size: 1.1rem;\n}\n\nfooter i {\n    color: var(--text-color-main);\n    transition: transform 0.1s ease;\n}\n\n@media (hover: hover) {\n    #footer-link:hover,\n    #footer-dark-mode:hover {\n        cursor: pointer;\n        transform: scale(1.2);\n        transition: transform 0.1s ease;\n    }\n}\n\n@media screen and (max-width: 800px) {\n     :root {\n        --header-height: 80px;\n        --board-size: 278px;\n        --cell-size: 26px;\n    }\n}"],sourceRoot:""}]);const l=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&i[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],l=0;l<n.length;l++){var s=n[l],c=o.base?s[0]+o.base:s[0],A=r[c]||0,d="".concat(c," ").concat(A);r[c]=A+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=a(u,o);o.byIndex=l,e.splice(l,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var l=t(r[i]);e[l].references--}for(var s=o(n,a),c=0;c<r.length;c++){var A=t(r[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),i=t.n(r),l=t(565),s=t.n(l),c=t(216),A=t.n(c),d=t(589),p=t.n(d),u=t(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=A(),e()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const m={carrier:{id:1,name:"carrier",length:5},battleship:{id:2,name:"battleship",length:4},destroyer:{id:3,name:"destroyer",length:3},submarine:{id:4,name:"submarine",length:3},patrol:{id:5,name:"patrol",length:2}},C=function(){const n=function(){let n=[];for(let e=0;e<=9;e++){let t=[];for(let n=0;n<=9;n++)t[n]=null;n[e]=t}return n}(),e=[];return{board:n,placedShips:e,removeShip:function(n){const[t,o]=n,a=this.checkSquare(t,o);a.squares.forEach((n=>{const[e,t]=n;this.board[e][t]=null}));const r=e.indexOf(a);e.splice(r,1)},checkValidPlacement:function(n,e,t){let o=[],[a,r]=e;for(let e=0;e<n;e++)o.push([a,r]),"horizontal"===t?r++:a++;return{isValid:o.every((n=>{const[e,t]=n;return void 0!==this.checkSquare(e,t)&&(null===this.board[e][t]||void 0)})),squares:o}},checkSquare:function(n,e){if(!(n<0||e<0))return n>9||e>9?void 0:this.board[n][e]},placeShip:function(n,t,o){const a=m[n].length,r=this.checkValidPlacement(a,t,o);if(r.isValid){const t=function(n){return{type:n,length:m[n].length,hits:0,squares:void 0,alignment:void 0,hit:function(){this.hits++},isSunk:function(){return this.hits>=this.length}}}(n);return t.squares=r.squares,t.alignment=o,r.squares.forEach((n=>{let[e,o]=n;this.board[e][o]=t})),e.push(t),t}return"Cannot place ship in that area"},placeAllShipsRandomly:function(){!function(n){for(let e=0;e<10;e++)for(let t=0;t<10;t++)n[e][t]=null}(this.board),function(n){for(;n.length>0;)n.pop()}(e);for(const n in m){let e=this.placeShipRandomly(n);for(;"object"!=typeof e||null==e;)e=this.placeAllShipsRandomly(n)}},placeShipRandomly:function(n){const e=m[n].length;function t(){return Math.random()<.5?"horizontal":"vertical"}function o(n){let t=0,o=0;return"vertical"===n?t=e-1:o=e-1,[Math.floor(Math.random()*(10-t)),Math.floor(Math.random()*(10-o))]}let a=t(),r=o(),i=this.checkValidPlacement(e,r,a);for(;!i.isValid;)a=t(),r=o(),i=this.checkValidPlacement(e,r,a);return this.placeShip(n,r,a)},receiveAttack:function(n,e){if(void 0===this.checkSquare(n,e))return"Invalid location";const t=this.board[n][e];return null===t?this.board[n][e]="miss":(t.hit(),this.board[n][e]="hit"),[this.board[n][e],[n,e],t]},checkAllShipsSunk:function(){return e.every((n=>n.isSunk()))}}},g=function(){const n=function(){const n=[];for(let e=0;e<10;e++){let t=[];for(let n=0;n<10;n++)t.push([e,n]);n.push(t)}return n}(),e=[],t=["up","down","left","right"];function o(n,e){let[t,o]=n;switch(e){case"up":t--;break;case"down":t++;break;case"left":o--;break;case"right":o++}return[t,o]}return{availableAttacks:n,lastHitArray:e,concurrentMisses:0,attack:function(n){if(this.lastHitArray.length>0&&this.checkIfShipIsSunk(n,this.lastHitArray[e.length-1]),0===this.availableAttacks.length)return"No squares to attack";if(0===e.length){if(this.concurrentMisses>5&&Math.random()>.8)for(let e=0;e<10;e++)for(let t=0;t<10;t++){const o=n.gameBoard.checkSquare(e,t);if("object"==typeof o&&null!=o)return console.log("cheating"),[e,t]}return this.getRandomCell(n)}const t=this.lastHitArray[e.length-1],o=this.getAllAdjascentCells(n,t),a=o.filter((e=>"hit"===e.cellResult&&!1===this.checkIfShipIsSunk(n,e.adjascentCell)));if(a.length>0){const e=a[Math.floor(Math.random()*a.length)];let o=this.getNextAttackableCell(n,t,this.flipDirection(e.direction));for(!1===o&&(o=this.getNextAttackableCell(n,t,e.direction));!1===o;)o=this.getNextAttackableCell(n,t,this.possibleDirections[Math.floor(Math.random()*this.possibleDirections.length)]);return o}for(let e=this.lastHitArray.length-2;e>=0;e--){const o=this.lastHitArray[e],a=this.getAdjacency(t,o);if(a){let e=this.getNextAttackableCell(n,t,a.direction);if(e)return e}}const r=o.filter((n=>"string"!=typeof n.cellResult&&void 0!==n.cellResult));return r[Math.floor(Math.random()*r.length)].adjascentCell},getRandomCell:function(n){if(0===this.availableAttacks.length)return"No squares to attack";let e=Math.floor(Math.random()*this.availableAttacks.length),t=Math.floor(Math.random()*this.availableAttacks[e].length),o=this.availableAttacks[e][t];return this.getAllAdjascentCells(n,o).every((n=>"object"!=typeof n.cellResult))?this.getRandomCell(n):o},getAllAdjascentCells:function(n,e){return t.map((t=>{const o=this.getAdjascentCell(e,t);let a=n.gameBoard.checkSquare(o[0],o[1]);return"hit"===a&&this.checkIfShipIsSunk(n,o)&&(a="sunk"),{cellResult:a,adjascentCell:o,direction:t}}))},getAdjascentCell:o,removeCellFromAvailableAttacks:function(n){for(let e=0;e<this.availableAttacks.length;e++)for(let t=0;t<this.availableAttacks[e].length;t++){const o=this.availableAttacks[e][t];if(n[0]===o[0]&&n[1]===o[1])return this.availableAttacks[e].splice(t,1),void(0===this.availableAttacks[e].length&&this.availableAttacks.splice(e,1))}},checkIfShipIsSunk:function(n,e){let t;return n.gameBoard.placedShips.forEach((n=>{n.squares.some((n=>n[0]===e[0]&&n[1]===e[1]))&&(t=n)})),!!t.isSunk()&&(t.squares.forEach((n=>{const e=this.lastHitArray.findIndex((e=>e[0]===n[0]&&e[1]===n[1]));e>-1&&this.lastHitArray.splice(e,1)})),!0)},flipDirection:function(n){switch(n){case"up":return"down";case"down":return"up";case"left":return"right";case"right":return"left";default:return!1}},getNextAttackableCell:function(n,e,t){let a=o(e,t);for(let e=0;e<4;e++){let e=n.gameBoard.checkSquare(a[0],a[1]);if("object"==typeof e||null===e)return a;if(void 0===e)return!1;if("miss"===e)return!1;if("hit"===e&&this.checkIfShipIsSunk(n,a))return!1;a=o(a,t)}return!1}}};let f,b;const v={shipObject:null,shipElement:null,offsetX:null,offsetY:null,rowDif:0,colDif:0,shipHomeContainer:null,previousContainer:null,previousCell:null,currentCell:null};function B(n){const e=document.createElement("div");e.classList.add("setup-ship"),e.id=`${n.name}-home`;const t=document.createElement("div");t.id=n.name,t.dataset.length=n.length,t.classList.add("setup-ship-box");for(let e=0;e<n.length;e++){const n=document.createElement("div");n.classList.add("setup-ship-cell"),t.append(n)}t.draggable=!0,t.dataset.alignment="horizontal",t.addEventListener("dragstart",y),t.addEventListener("dragend",I),t.addEventListener("dblclick",k),t.addEventListener("touchmove",(function(n){const e=n.touches[0].clientX,o=n.touches[0].clientY,a=document.elementsFromPoint(e,o).filter((n=>n.classList.contains("cell")));a.length>0?E(n,a[0]):S();const r=document.querySelector("#app"),i=document.querySelector(".ghost-ship");i&&i.remove();const l=t.cloneNode(!0),s=n.targetTouches[0];"vertical"===v.shipElement.dataset.alignment&&l.classList.add("setup-ship-vertical"),l.classList.add("ghost-ship"),l.style.left=s.pageX-v.offsetX+"px",l.style.top=s.pageY-v.offsetY+"px",r.appendChild(l)})),t.addEventListener("touchend",(function(n){const e=document.querySelector(".ghost-ship");e&&e.remove(),I();const t=n.changedTouches[0].clientX,o=n.changedTouches[0].clientY,a=document.elementsFromPoint(t,o).filter((n=>n.classList.contains("cell")));a.length>0&&L(n,a[0])})),t.addEventListener("touchstart",(function(n){n.preventDefault();let e=(new Date).getTime();e-t.lastClick<200?(k(),y(n)):y(n),t.lastClick=e}));const o=document.createElement("p");return"patrol"===n.name?o.textContent="patrol boat":o.textContent=n.name,e.append(o,t),e}function y(n){if("touchstart"===n.type?(v.shipElement=n.target.parentElement,v.shipHomeContainer=document.querySelector(`#${n.target.parentElement.id}-home`),v.previousContainer=n.target.parentElement.parentElement):(v.shipElement=n.target,v.shipHomeContainer=document.querySelector(`#${n.target.id}-home`),v.previousContainer=n.target.parentElement),function(n){let e,t;if("touchstart"===n.type){let o=n.target.parentElement.getBoundingClientRect();e=n.targetTouches[0].clientX-o.x,t=n.targetTouches[0].clientY-o.y,v.offsetX=e,v.offsetY=t}else e=n.offsetX,t=n.offsetY;const o=document.querySelector(".setup-ship-cell").offsetWidth;"horizontal"===v.shipElement.dataset.alignment?(v.rowDif=0,v.colDif=Math.floor(e/(o+2))):(v.rowDif=Math.floor(t/(o+2)),v.colDif=0)}(n),"vertical"===v.shipElement.dataset.alignment&&v.shipElement.classList.add("setup-ship-vertical"),setTimeout((()=>{v.shipElement.classList.add("setup-ship-hide"),v.shipElement.classList.remove("setup-ship-dropped"),v.shipElement.classList.remove("setup-ship-vertical"),v.shipHomeContainer.append(v.shipElement)}),0),v.previousContainer.classList.contains("cell")){const n=v.previousContainer,e=parseInt(n.dataset.row),t=parseInt(n.dataset.col);f.gameBoard.removeShip([e,t])}}function I(n){v.shipElement.classList.remove("setup-ship-hide")}function x(){f.gameBoard.placeAllShipsRandomly(),f.gameBoard.placedShips.forEach((n=>{const e=n.type,t=n.squares[0],o=n.alignment,a=document.querySelector(`#${e}`);a.dataset.alignment=o,a.classList.add("setup-ship-dropped"),"vertical"==o?a.classList.add("setup-ship-vertical"):a.classList.remove("setup-ship-vertical");const[r,i]=t;b.querySelector(`[data-row='${r}'][data-col='${i}']`).appendChild(a)}))}function k(n){const e=v.shipElement,t=m[e.id].length,o=e.parentElement;if(!o.classList.contains("cell"))return;const a=parseInt(o.dataset.row),r=parseInt(o.dataset.col);f.gameBoard.removeShip([a,r]);let i,l=a,s=r,c=e.dataset.alignment;"horizontal"===c?(i="vertical",10-l<t&&(l=10-t)):(i="horizontal",10-s<t&&(s=10-e));let A=0,d=f.gameBoard.checkValidPlacement(t,[l,s],i);for(;!1===d.isValid&&A<10;)"horizontal"===i?l=l<9?l+1:0:s=s<9?s+1:0,d=f.gameBoard.checkValidPlacement(t,[l,s],i),A++;d.isValid?(f.gameBoard.placeShip(e.id,[l,s],i),b.querySelector(`[data-row='${l}'][data-col='${s}']`).appendChild(e),e.dataset.alignment=i,"vertical"===i?e.classList.add("setup-ship-vertical"):e.classList.remove("setup-ship-vertical")):f.gameBoard.placeShip(t,[l,s],c)}function E(n,e){S(),n.preventDefault();const t=v.shipElement.id;let o,a;"touchmove"===n.type?(o=parseInt(e.dataset.row)-parseInt(v.rowDif),a=parseInt(e.dataset.col)-parseInt(v.colDif)):(o=parseInt(n.target.dataset.row)-parseInt(v.rowDif),a=parseInt(n.target.dataset.col)-parseInt(v.colDif));const r=f.gameBoard.checkValidPlacement(m[t].length,[o,a],v.shipElement.dataset.alignment);r.squares=r.squares.filter((n=>void 0!==f.gameBoard.checkSquare(n[0],n[1]))),r.squares.forEach((n=>{const e=b.querySelector(`[data-row='${n[0]}'][data-col='${n[1]}']`),t=document.createElement("div");t.classList.add("cell","cell-drag-over"),e.appendChild(t),r.isValid?t.classList.add("cell-drag-valid"):t.classList.add("cell-drag-invalid")}))}function w(n){n.preventDefault()}function S(n){document.querySelectorAll(".cell-drag-over").forEach((n=>{n.remove()}))}function L(n,e){let t,o;S();const a=v.shipElement.id;if("touchend"===n.type?(t=parseInt(e.dataset.row)-parseInt(v.rowDif),o=parseInt(e.dataset.col)-parseInt(v.colDif)):(t=parseInt(n.target.dataset.row)-parseInt(v.rowDif),o=parseInt(n.target.dataset.col)-parseInt(v.colDif)),f.gameBoard.checkValidPlacement(m[a].length,[t,o],v.shipElement.dataset.alignment).isValid){const n=b.querySelector(`[data-row='${t}'][data-col='${o}']`);n.appendChild(v.shipElement),v.shipElement.classList.add("setup-ship-dropped"),v.previousContainer=n,f.gameBoard.placeShip(v.shipElement.id,[t,o],v.shipElement.dataset.alignment)}else{if(v.previousContainer.classList.contains("cell")){v.shipElement.classList.add("setup-ship-dropped");let n=v.previousContainer.dataset.row,e=v.previousContainer.dataset.col;f.gameBoard.placeShip(v.shipElement.id,[n,e],v.shipElement.dataset.alignment)}v.previousContainer.appendChild(v.shipElement)}v.shipElement.classList.remove("setup-ship-hide"),"vertical"===v.shipElement.dataset.alignment?v.shipElement.classList.add("setup-ship-vertical"):v.shipElement.classList.remove("setup-ship-vertical")}const q=function(n,e){return f=n,b=e,b.querySelectorAll(".cell").forEach((n=>{n.addEventListener("dragenter",E),n.addEventListener("dragover",w),n.addEventListener("dragleave",S),n.addEventListener("drop",L)})),e},j=function(){const n=document.createElement("div");n.classList.add("setup-ships-container");const e=document.createElement("div");e.classList.add("setup-ships-header");const t=document.createElement("h3");t.textContent="Place your ships";const o=document.createElement("p");o.textContent="Double click to rotate(once placed)";const a=document.createElement("div");a.classList.add("setup-ships-options");const r=document.createElement("button");r.classList.add("setup-button-start"),r.textContent="Start Game";const i=document.createElement("button");i.classList.add("setup-button-random"),i.textContent="Randomize",i.addEventListener("click",x),a.append(r,i);const l=document.createElement("div");l.classList.add("setup-ship-list");for(const n in m)l.append(B(m[n]));return e.append(t,o),n.append(e,l,a),n},Y=document.createElement("div");let z=!1;Y.id="app",document.body.appendChild(Y);const P=function(){const n=document.createElement("header");n.id="header";const e=document.createElement("h1");e.textContent="Battleship";const t=document.createElement("button");t.classList.add("new-game-button"),t.textContent="New game";const o=document.createElement("button");o.classList.add("play-button"),o.textContent="How to play";const a=document.createElement("div");return a.classList.add("btn-container"),a.appendChild(t),a.appendChild(o),n.appendChild(e),n.appendChild(a),n}(),D=function(){const n=document.createElement("footer"),e=document.createElement("p");e.classList.add("footer-author"),e.textContent="Phantommobb 2023";const t=document.createElement("a");t.id="footer-link",t.setAttribute("href","https://github.com/nickonyi/Battleship.git");const o=document.createElement("i");function a(){return localStorage.getItem("theme")}function r(){document.querySelector(":root").classList.toggle("dark"),i.classList.toggle("fa-moon"),i.classList.toggle("fa-sun")}o.classList.add("fa-brands","fa-github","fa-xl","footer-logo"),t.appendChild(o);const i=document.createElement("i");return i.id="footer-dark-mode",i.classList.add("fa-solid","fa-moon","fa-xl"),i.addEventListener("mousedown",(function(){r(),"dark"===a()?localStorage.setItem("theme","light"):localStorage.setItem("theme","dark")})),("dark"===a()||!a()&&window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches)&&r(),n.appendChild(e),n.appendChild(t),n.appendChild(i),n}(),T=document.createElement("div");T.id="game-container",T.classList.add("game-container","active");const M=document.createElement("div");M.classList.add("how-to-play"),Y.appendChild(P),Y.appendChild(T),Y.appendChild(M),Y.appendChild(D),function(){let n=!0,e=!1;document.querySelector(".play-button").addEventListener("click",(()=>{e||(e=!0,n=!1,async function(){const n=document.querySelector("#game-container"),e=document.querySelector(".how-to-play");n.classList.toggle("active"),await V(140),n.style.display="none",e.style.display="flex",await V(140),e.classList.toggle("active"),window.location.href="#how-to-play"}())})),document.querySelector(".new-game-button").addEventListener("click",(()=>{z&&$(),n||(n=!0,e=!1,async function(){const n=document.querySelector("#game-container"),e=document.querySelector(".how-to-play");e.classList.toggle("active"),await V(140),e.style.display="none",n.style.display="flex",await V(140),n.classList.toggle("active"),window.location.href="#New-game"}())}))}();const R={player1:void 0,player2:void 0,currentPlayer:void 0,defendingPlayer:void 0,createPlayer:function(n,e){return function(n,e){let t="string"==typeof n?n:"battlebot";const o=e,a="string"!=typeof n,r=C();return{name:t,number:o,isAi:a,battlebot:g(),gameBoard:r,attack:function(n,e,t){if(this.isAi){if(0===this.battlebot.availableAttacks.length)return"No squares to attack";[e,t]=this.battlebot.attack(n)}console.log(this.battlebot.attack(n));const o=n.gameBoard.receiveAttack(e,t);return this.isAi&&"hit"===o[0]&&(this.battlebot.lastHitArray.push(o[1]),this.battlebot.concurrentMisses=0),"miss"===o[0]&&this.battlebot.concurrentMisses++,null!==o[2]&&(this.battlebot.lastShip=o[2]),this.battlebot.removeCellFromAvailableAttacks(o[1]),o}}}(n,e)},newGame:function(n,e){this.player1=n,this.player2=e,this.currentPlayer=this.player1,this.defendingPlayer=this.player2},changeTurn:function(){this.currentPlayer=this.currentPlayer===this.player1?this.player2:this.player1,this.defendingPlayer=this.defendingPlayer===this.player2?this.player1:this.player2},checkGameOver:function(){return this.player1.gameBoard.checkAllShipsSunk()?this.player2:!!this.player2.gameBoard.checkAllShipsSunk()&&this.player1}};function $(){T.style.display="flex",M.style.display="none";const n=R.createPlayer("Nick_da_destroyer",1),e=R.createPlayer(!1,2);e.gameBoard.placeAllShipsRandomly(),function(n){Z(T);const e=q(n,N(n)),t=j();T.append(e,t)}(n),function(){Z(M);const n=document.createElement("div");n.classList.add("how-to-playboard-container");const e=document.createElement("h1");e.classList.add("how-to-playboard-header"),e.textContent="How to play battleship";const t=document.createElement("div");t.classList.add("how-to-play-div-container");const o=document.createElement("div");o.classList.add("how-to-play-div-one");const a=document.createElement("h3");a.classList.add("how-to-play-div1-header"),a.textContent="Rules";const r=document.createElement("p");r.classList.add("how-to-play-div1-text"),r.textContent="The objective of Battleship is to try and sink all of the opponent's ships before they sink all of yours. Players take turns firing shots to attempt to hit the enemy ships";const i=document.createElement("p");i.classList.add("how-to-play-div1-text"),i.textContent="Both players can not see the fleet of the other, you have to guess where is the ideal position to shoot at!";const l=document.createElement("p");l.classList.add("how-to-play-div1-text"),l.textContent="When a player hits a tile that holds a ship, they can replay until they miss a shot.";const s=document.createElement("p");s.classList.add("how-to-play-div1-text"),s.textContent="First player to sink all the opponent's ships wins the game!",o.append(a,r,i,l,s);const c=document.createElement("div");c.classList.add("how-to-play-div-two");const A=document.createElement("h3");A.classList.add("how-to-play-div2-header"),A.textContent="Controls";const d=document.createElement("p");d.classList.add("how-to-play-div2-ul"),d.textContent="Before starting, you need to place all your ships on the board. To do that, you can:";const p=document.createElement("ul"),u=document.createElement("li");u.textContent="Drag and drop the ships on the board (doube click to rotate the ship)";const h=document.createElement("li");h.textContent="Press random to place your ships randomly";const m=document.createElement("p");m.classList.add("how-to-play-div1-text"),m.textContent="Once that is done, press start and try to defeat the AI!",p.append(u,h),c.append(A,d,p,m),t.append(o,c),n.append(e,t),M.appendChild(n)}(),document.querySelector(".setup-button-start").addEventListener("click",(function(t){var o,a;5==n.gameBoard.placedShips.length&&(o=n,a=e,R.newGame(o,a),function(){Z(T);const n=N(R.player1),e=N(R.player2);(function(n,e){for(let t=0;t<10;t++)for(let o=0;o<10;o++){const a=n.gameBoard.board[t][o],r=e.querySelector(`[data-row='${t}'][data-col='${o}']`);null!==a&&"object"==typeof a?r.classList.add("cell-ship"):r.classList.remove("cell-ship")}})(R.player1,n.querySelector(".board")),T.append(n,e)}(),z=!0)}))}function V(n){return new Promise((e=>{setTimeout((()=>{e(2)}),n)}))}function Z(n){for(;n.firstChild;)n.removeChild(n.firstChild)}function N(n){const e=document.createElement("div");e.classList.add("board-container");const t=document.createElement("h3");n.isAi?t.textContent=`${n.name}'s fleet`:t.textContent="Your fleet";const o=function(n){const e=document.createElement("div");e.classList.add("board");for(let t=0;t<10;t++)for(let o=0;o<10;o++){const a=document.createElement("div");a.classList.add("cell"),a.dataset.player=n?n.number:0,a.dataset.row=t,a.dataset.col=o,e.appendChild(a),n&&n.isAi&&a.addEventListener("click",Q,!1)}return e}(n);return e.append(t,o),e}function Q(n){const e=n.target,t=e.dataset.player,o=R["player"+("1"==t?"2":"1")],a=R[`player${t}`];if(R.currentPlayer!==o)return;const r=e.dataset.row,i=e.dataset.col,[l,s,c]=o.attack(a,r,i);O(e,t,l,c),H()}function O(n,e,t,o){"hit"==t&&(n.classList.add("cell-hit"),o.isSunk()&&o.squares.forEach((n=>{document.querySelector(`[data-player='${e}'][data-row='${n[0]}'][data-col='${n[1]}']`).classList.add("cell-sunk")}))),"miss"==t&&n.classList.add("cell-miss")}function H(){const n=R.checkGameOver();if(n)return function(n){document.querySelectorAll(".cell").forEach((n=>n.removeEventListener("click",Q))),console.log(U(n)),T.appendChild(U(n))}(n);R.changeTurn(),R.currentPlayer.isAi&&function(n){if(n!==R.currentPlayer)return;const e=R.defendingPlayer===R.player1?"1":"2",[t,o,a]=n.attack(R.defendingPlayer);O(document.querySelector(`[data-player='${e}'][data-row='${o[0]}'][data-col='${o[1]}']`),e,t,a),H()}(R.currentPlayer)}function U(n){const e=R.checkGameOver()===R.player1?R.player2:R.player1,t=document.createElement("div");t.classList.add("victory-container");const o=document.createElement("h2"),a=document.createElement("p"),r=document.createElement("p");return n.isAi?(o.classList.add("victory-defeat"),o.textContent="TOTAL ANNILATION!",a.textContent=`${n.name} has claimed domination`,r.textContent="Your fleet is sunk!"):(o.classList.add("victory-victory"),o.textContent="TOTAL VICTORY",a.textContent="You have claimed domination!",r.textContent=`${e.name}'s fleet is sunk.`),t.append(o,a,r),t}$()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,